name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Targets
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: true
          
      - name: Install X11 Development Libraries
        run: |
          if [[ "${{ matrix.platform }}" == "linux" || "${{ matrix.platform }}" == "ubuntu" ]]; then
            sudo apt-get update
            sudo apt-get install -y libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxcomposite-dev libxdamage-dev libxext-dev libxfixes-dev libxi-dev libxrandr-dev libxrender-dev libxtst-dev libasound2-dev libpulse-dev libjack-dev libnss3-dev libxcursor-dev libxss-dev libgtk-3-dev libwebkit2gtk-4.0-dev
          elif [[ "${{ matrix.platform }}" == "mac" ]]; then
            brew update
            brew install libx11 libxrandr libxinerama libxcursor libxcomposite libxdamage libxext libxfixes libxi libxrandr libxrender libxtst libasound libpulse jack nss libxcursor libxss gtk+3 webkit2gtk
          fi

      - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build Target
        run: |
          cmake -S . -B build/${{ matrix.platform }}
          cmake --build build/${{ matrix.platform }} --config Release

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/${{ matrix.platform }}/ProiEqualizer.so
            build/${{ matrix.platform }}/ProiEqualizer.vst3
            build/${{ matrix.platform }}/ProiEqualizer.exe
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
